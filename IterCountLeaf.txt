Count number of leaf nodes iteratively
class Node:
    def __init__(self,key):
        self.right=None
        self.left=None
        self.val=key
def insertNode(root,data):
    if(root==None):
        root=None
    else:
        if(root.val>=data):
            if(root.left==None):
                root.left=Node(data)
            else:
                insertNode(root.left,data)
        else:
            if(root.right==None):
                root.right=Node(data)
            else:
                insertNode(root.right,data)
arr=list(map(int,input().split()))
r=Node(arr[0])
for i in range(1,len(arr)):
    insertNode(r,arr[i])
def inorder(root):
    if(root):
        inorder(root.left)
        print(root.val)
        inorder(root.right)
def countnodei(root):
    if(root==None):
        return 0
    ar=[]
    ar.append(root)
    count=0
    while(len(ar)>0):
        node=ar.pop(0)
        if((node.left==None) and (node.right==None)):
            count+=1    
        if(node.left!=None):
            ar.append(node.left)
        if(node.right!=None):
            ar.append(node.right)
    return count    
ans=countnodei(r)
print(ans)

